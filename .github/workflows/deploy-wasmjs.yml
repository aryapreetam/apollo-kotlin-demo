name: Deploy WasmJS to GitHub Pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clone Apollo Kotlin repository
        run: |
          git clone https://github.com/apollographql/apollo-kotlin.git apollo-kotlin
          cd apollo-kotlin
          git checkout main

      - name: Build and publish Apollo Kotlin to local Maven
        run: |
          cd apollo-kotlin
          ./gradlew publishToMavenLocal -x test

      - name: Build WasmJS production
        run: ./gradlew :composeApp:wasmJsBrowserDistribution

      - name: Prepare GitHub Pages content
        run: |
          mkdir -p github-pages
          cp -r composeApp/build/dist/wasmJs/productionExecutable/* github-pages/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './github-pages'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4